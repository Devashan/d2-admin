@mixin mix-input-color-styles ($suffix) {
  color: var(--d2-input-font-color-#{$suffix});
  border-color: var(--d2-input-border-color-#{$suffix});
  background-color: var(--d2-input-background-color-#{$suffix});
}

@mixin mix-input-color ($color) {
  @include mix-input-color-styles(#{$color}-base);
  &:hover { @include mix-input-color-styles(#{$color}-hover); }
  &:focus { @include mix-input-color-styles(#{$color}-focus); }
  &:active, &.is-active { @include mix-input-color-styles(#{$color}-active); }
  @include when(disabled) {
    &, &:hover, &:focus {
      cursor: not-allowed;
      @include mix-input-color-styles(#{$color}-disabled);
    }
  }
  @include when(loading) {
    &, &:hover, &:focus {
      cursor: not-allowed;
      @include mix-input-color-styles(#{$color}-loading);
    }
  }
}

@mixin mix-input-size($size) {
  padding: var(--d2-input-padding-y-#{$size}) var(--d2-input-padding-x-#{$size});
  border-radius: var(--d2-input-border-radius-#{$size});
  font-size: var(--d2-input-font-size-#{$size});
  font-weight: var(--d2-input-font-weight-#{$size});
  line-height: var(--d2-input-line-height-#{$size});
}

@include b(input) {
  display: inline-block;
  box-sizing: border-box;
  outline: none;
  margin: 0;
  border-width: var(--d2-border-width);
  border-style: var(--d2-border-style);
  transition: --var-transition-speed(fast);
  &:focus,
  &:active {
    outline: none;
  }
  @include mix-input-color(base);
  @each $color, $color-setting in $--d2-color {
    @include m($color) {
      @include mix-input-color($color);
    }
  }
  @each $size, $size-setting in $--d2-input-sizes {
    @if $size == base {
      @include mix-input-size(base);
    }
    @else {
      @include m($size) {
        @include mix-input-size($size);
      }
    }
  }
}
